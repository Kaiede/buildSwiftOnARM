diff --git a/include/swift/AST/Attr.h b/include/swift/AST/Attr.h
index 417f9249d8..e1fa02fc86 100644
--- a/include/swift/AST/Attr.h
+++ b/include/swift/AST/Attr.h
@@ -135,7 +135,7 @@ public:
   static const char *getAttrName(TypeAttrKind kind);
 };
 
-class AttributeBase {
+class alignas(1 << AttrAlignInBits) AttributeBase {
 public:
   /// The location of the '@'.
   const SourceLoc AtLoc;
diff --git a/include/swift/AST/TypeAlignments.h b/include/swift/AST/TypeAlignments.h
index f360a10bef..8ceb776d26 100644
--- a/include/swift/AST/TypeAlignments.h
+++ b/include/swift/AST/TypeAlignments.h
@@ -30,6 +30,7 @@ namespace swift {
   class ArchetypeType;
   class AssociatedTypeDecl;
   class ASTContext;
+  class AttributeBase;
   class BraceStmt;
   class Decl;
   class DeclContext;
@@ -51,6 +52,7 @@ namespace swift {
   class ValueDecl;
 
   /// We frequently use three tag bits on all of these types.
+  constexpr size_t AttrAlignInBits = 3;
   constexpr size_t DeclAlignInBits = 3;
   constexpr size_t DeclContextAlignInBits = 3;
   constexpr size_t ExprAlignInBits = 3;
@@ -114,6 +116,8 @@ LLVM_DECLARE_TYPE_ALIGNMENT(swift::Pattern,
 LLVM_DECLARE_TYPE_ALIGNMENT(swift::SILFunction,
                             swift::SILFunctionAlignInBits)
 
+LLVM_DECLARE_TYPE_ALIGNMENT(swift::AttributeBase, swift::AttrAlignInBits)
+
 static_assert(alignof(void*) >= 2, "pointer alignment is too small");
 
 #endif
